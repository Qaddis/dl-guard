export type LandingLiType = {
	title: string
	description: string
}

export const advs: LandingLiType[] = [
	{
		title: "Усиленная <i>безопасность</i> учебного заведения",
		description:
			"Благодаря системе электронных пропусков заведение сможет контролировать, кто посещает её территорию, что позволит предотвратить несанкционированный вход, повышая безопасность учеников и персонала."
	},
	{
		title: "Эффективность <i>контроля</i> посещения",
		description:
			"Система автоматически записывает время посещения школы учеником, что позволяет отслеживать посещаемость и опоздания без необходимости ручного ведения учета."
	},
	{
		title: "<i>Отчетность</i> и аналитика",
		description:
			"Система может предоставлять данные о посещаемости учебного заведения, которую можно отслеживать с помощью графиков и таблиц."
	},
	{
		title: "Минимализация бумажной работы и <i>экологичность</i>",
		description:
			"Уменьшение использования бумажных пропусков и других документов не только упрощает административные процессы, но и способствует снижению вреда окружающей среды."
	},
	{
		title: "Возможность <i>улучшений</i>",
		description:
			"Открытый исходный код позволит доработать систему под нужды и технические возможности заведения. При создании системы использовались популярные языки программирования и фреймворки, что значительно облегчает дальнейшую модернизацию и поддержку."
	}
]

export const techs: LandingLiType[] = [
	{
		title: "Arduino",
		description:
			"Считывающее устройство состоит из платы Arduino Nano и модуля PN532."
	},
	{
		title: "Python",
		description:
			"Компьютерное приложение для взаимодействия с считывающими устройствами написано на Python."
	},

	{
		title: "Node.js",
		description: "Серверная часть системы написана на Node.js."
	},
	{
		title: "MongoDB",
		description:
			"В качестве базы данных используется MongoDB, а для её администрирования - MongoDB Compass + Shell."
	},
	{
		title: "HTML CSS JavaScript",
		description:
			"Используются в создании сайта проекта, интерфейса компьютерного приложения, а так же сервера. "
	},
	{
		title: "Next.js",
		description: "На нём написан сайт проекта."
	},
	{
		title: "Kotlin",
		description: "Используется в мобильном приложении."
	}
]

export type MaterialsLiType = {
	title: string
	description: string
	howWork: string
	path?: string
}

export const mtls: MaterialsLiType[] = [
	{
		title: "PC",
		description:
			"Приложение для Windows, которое позволит взаимодействовать со считывающими устройствами.",
		howWork:
			"Приложение проверяет заданный <i>COM</i> порт. Когда <i>считывающее устройство</i> отрабатывает и выводит <i>уникальный идентификатор пропуска</i> (<i>UID</i>), устройство его считывает и делает запрос на <i>сервер</i>, после чего выводит ответ. Позволяет добавить несколько устройств и включать/выключать те, которые захотите.",
		path: "/downloads/dl-guard_program.zip"
	},
	{
		title: "Server",
		description: "Файлы программной части сервера системы.",
		howWork:
			"Получает от <i>&quot;DL Guard | PC&quot; уникальный идентификатор пропуска</i> (<i>UID</i>), ищет в <i>Базе Данных</i> пользователя с таким же <i>UID</i> и, если находит, отправляет обратно <i>&quot;DL Guard | PC&quot;</i> разрешение. Если не находит (или пользователь помечен как неактивный), отправляет запрет.",
		path: "/downloads/dl-guard_server.zip"
	},
	{
		title: "Device",
		description: "Схемы и скетч считывающего устройства.",
		howWork:
			"Считывающее устройство. Подключается к ПК через <i>USB</i>. Для работы требуется установить и запустить <i>&quot;DL Guard | PC&quot;</i>. Когда к устройству подносят <i>RFID</i> метку или телефон с включенным <i>NFC</i>, устройство считывает содержимое, получает <i>уникальный идентификатор</i> (<i>UID</i>) и выводит его в <i>COM</i> порт.",
		path: "/downloads/dl-guard_device.zip"
	},
	{
		title: "Mobile",
		description:
			"Приложение для Android, которое позволит пользоваться пропуском с телефона при помощи NFC.",
		howWork:
			"Пользователь через свой логин и пароль входит в приложение, после чего ему на телефон сохраняется <i>уникальный идентификатор</i> (<i>UID</i>). После авторизации пользователь может приложить телефон с включенным <i>NFC</i> к <i>считывающему устройству</i>, которое через <i>NFC</i> получит с телефона <i>UID</i>."
	}
]
